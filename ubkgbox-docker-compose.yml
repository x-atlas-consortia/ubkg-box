# UBKGBox Docker Compose file
name: ubkgbox

services:

  # ubkg-front-end is a standalone UI with a landing page.
  ubkg-front-end:
    container_name: front-end
    image: hubmap/ubkg-front-end:latest
    ports:
      - "7000:8080"

    # Wait until the neo4j server in ubkg-back-end is running.
    depends_on:
      ubkg-back-end:
        condition: service_healthy

    init: true
    restart: always

    volumes:
      - "./log:/usr/src/app/log"

    environment:
      # neo4j browser port for the ubkg-back-end service.
      - UI_PORT
      # UID and GID 1001 to match the ubkg user by default.
      # These environment variables will be passed to the Dockerfile and used to configure the non-root
      # user under which nginx will run.
      - HOST_GID=${HOST_GID:-1002}
      - HOST_UID=${HOST_UID:-1002}

    networks:
      # The front end service is the only service exposed externally.
      - ubkg_net


    mem_limit: 2g # Limit to 2GB of RAM

  # ubkg-auth hosts the ubkg-auth UMLS authorization service.

  ubkg-auth:
    image: hubmap/ubkg-auth:latest
    container_name: auth
    expose:
      - "8080"

    # Wait until the neo4j server in ubkg-back-end is running.
    depends_on:
      ubkg-back-end:
        condition: service_healthy

    init: true
    restart: always

    volumes:
      # Mount the ubkg-auth's app config (in the instance subdirectory of the build directory) to container in order to keep it outside the image.
      - "./log:/usr/src/app/log"
      - "./api_cfg:/usr/src/app/src/ubkg_api/instance"

    environment:
      # UID and GID 1001 to match the ubkg user by default.
      # These environment variables will be passed to the Dockerfile and used to configure the non-root
      # user under which nginx will run.
      - HOST_GID=${HOST_GID:-1003}
      - HOST_UID=${HOST_UID:-1003}

    mem_limit: 2g # Limit to 2GB of RAM

    networks:
      - ubkg_net

  # ubkg-api hosts the UBKG-API.
  ubkg-api:
    # Use the published image and tag from Docker Hub
    image: hubmap/ubkg-api:latest
    container_name: api

    # Map host machine port 7000 to container port 8080
    # Only root can listen on ports below 1024, we use higher-numbered ports
    # since nginx is running under non-root user ubkg.
    # Divergence from standard hubmapconsortium API architecture:
    # The standard architecture maps port 6666, which the Chrome browser considers an "unsafe port".
    expose:
      - "8080"
    volumes:
      # Mount the ubkg-api's app config (in the instance subdirectory of the build directory) to container in order to keep it outside the image.
      - "./api_cfg:/usr/src/app/src/ubkg_api/instance"
      # Mount the nginx log to container
      - "./log:/usr/src/app/log"

    environment:
      # UID and GID 1001 to match the ubkg user by default.
      # These environment variables will be passed to the Dockerfile and used to configure the non-root
      # user under which nginx will run.
      - HOST_GID=${HOST_GID:-1001}
      - HOST_UID=${HOST_UID:-1001}

    mem_limit: 2g # Limit to 2GB of RAM

    # Wait until the neo4j server ubkg-back-end is running.
    depends_on:
      ubkg-back-end:
        condition: service_healthy

    networks:
      - ubkg_net

  # ubkg-guesdt hosts the Guesdt application
  ubkg-guesdt:
    # Use the published image and tag from Docker Hub
    image: hubmap/ubkg-guesdt:latest
    container_name: Guesdt

    expose:
      - "8080"
    volumes:
      # Mount the nginx log to container
      - "./log:/usr/src/app/log"

    # Wait until the neo4j server ubkg-back-end is running.
    depends_on:
      ubkg-back-end:
        condition: service_healthy

    networks:
      - ubkg_net

  # ubkg-back-end will be based on a local turnkey distribution of a Docker neo4j container. 
  ubkg-back-end:
    # Use the published image and tag from Docker Hub which is used to build the turnkey Docker distribution
    image: hubmap/ubkg-neo4j:current-release
    container_name: neo4j

    # Map host machine ports to container ports, as defined in the container.cfg file for the back end.
    ports:
      # ui port
      - ${UI_PORT}:7474
      # bolt port
      - ${BOLT_PORT}:7687

    # Map to the external bind mounts.
    volumes:
      # neo4j database
      - "./data:/usr/src/app/neo4j/data"
      # logs
      - "./logs:/usr/src/app/neo4j/logs"

    environment:
      # neo4j username and password obtained by the build_ubkgbox.sh script from container.cfg.
      - NEO4J_USER
      - NEO4J_PASSWORD

    mem_limit: 2g 

    # Check that the neo4j service is running in the container. The startup process takes some time; in addition, it stops and starts
    # the neo4j server. Wait at least 30 s before starting the health check.
    healthcheck:
      test: [ "CMD", "/usr/src/app/neo4j/bin/cypher-shell", "-u", "neo4j", "-p", "${NEO4J_PASSWORD}", "MATCH () RETURN count(*) as count" ]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 30s

    networks:
      - ubkg_net


networks:

  ubkg_net:
    driver: bridge
    #driver_opts:
      # bind front end to localhost
      #com.docker.network.bridge.host_binding_ipv4: 127.0.0.1

